<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.fusheng.exam.mapper.QuestionMapper">
  <resultMap id="BaseResultMap" type="xyz.fusheng.model.entity.Question">
    <!--@mbg.generated-->
    <!--@Table ex_question-->
    <id column="question_id" jdbcType="BIGINT" property="questionId" />
    <result column="question_content" jdbcType="VARCHAR" property="questionContent" />
    <result column="question_image" jdbcType="VARCHAR" property="questionImage" />
    <result column="question_video" jdbcType="VARCHAR" property="questionVideo" />
    <result column="question_code" jdbcType="VARCHAR" property="questionCode" />
    <result column="question_type_id" jdbcType="TINYINT" property="questionTypeId" />
    <result column="question_tag_id" jdbcType="TINYINT" property="questionTagId" />
    <result column="analysis" jdbcType="VARCHAR" property="analysis" />
    <result column="state" jdbcType="BOOLEAN" property="state" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="is_enabled" jdbcType="BOOLEAN" property="isEnabled" />
    <result column="is_deleted" jdbcType="BOOLEAN" property="isDeleted" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="updater_id" jdbcType="BIGINT" property="updaterId" />
    <result column="creator_name" jdbcType="VARCHAR" property="creatorName" />
    <result column="updater_name" jdbcType="VARCHAR" property="updaterName" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    question_id, question_content, question_image, question_video, question_code, question_type_id, 
    question_tag_id, analysis, `state`, remark, memo, version, is_enabled, is_deleted, 
    creator_id, updater_id, creator_name, updater_name, created_time, updated_time
  </sql>

  <select id="getRepositoryIdsByQuestionId" resultType="java.lang.Long">
    select repository_id from ex_repository_question where question_id = #{questionId}
  </select>

</mapper>