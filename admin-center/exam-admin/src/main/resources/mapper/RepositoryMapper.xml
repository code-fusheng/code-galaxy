<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.fusheng.admin.exam.core.mapper.RepositoryMapper">
  <resultMap id="BaseResultMap" type="xyz.fusheng.core.model.entity.Repository">
    <!--@mbg.generated-->
    <!--@Table ex_repository-->
    <id column="repository_id" jdbcType="BIGINT" property="repositoryId" />
    <result column="repository_name" jdbcType="VARCHAR" property="repositoryName" />
    <result column="question_count" jdbcType="INTEGER" property="questionCount" />
    <result column="state" jdbcType="BOOLEAN" property="state" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="is_enabled" jdbcType="BOOLEAN" property="isEnabled" />
    <result column="is_deleted" jdbcType="BOOLEAN" property="isDeleted" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="updater_id" jdbcType="BIGINT" property="updaterId" />
    <result column="creator_name" jdbcType="VARCHAR" property="creatorName" />
    <result column="updater_name" jdbcType="VARCHAR" property="updaterName" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    repository_id, repository_name, question_count, `state`, remark, memo, version, is_enabled,
    is_deleted, creator_id, updater_id, creator_name, updater_name, created_time, updated_time
  </sql>

  <insert id="saveRefForRepositoryAndQuestion">
    insert into ex_repository_question(repository_id, question_id) values (#{repositoryId}, #{questionId})
  </insert>

  <delete id="deleteRefForRepositoryAndQuestion">
    delete from ex_repository_question where repository_id = #{repositoryId} and question_id = #{questionId}
  </delete>

  <select id="getByPage" resultType="xyz.fusheng.core.model.vo.RepositoryVo">
    select *
    from ex_repository
    where is_deleted = 0
    <if test="params.repositoryName != null and params.repositoryName != ''">
        and repository_name like concat('%', #{params.repositoryName}, '%')
    </if>
    <if test="params.creatorName != null">
        and creator_name like concat(#{params.creatorName}, '%')
    </if>
    <if test="params.isEnabled != null">
        and is_enabled = #{params.isEnabled}
    </if>
    <if test="params.repositoryTime != null">
        and created_time between #{params.repositoryTime[0], jdbcType=TIMESTAMP} and #{params.repositoryTime[1], jdbcType=TIMESTAMP}
    </if>
    <if test="sortColumn !=null and sortColumn != ''">
        order by ${sortColumn} ${sortMethod}
    </if>
    limit #{index}, #{pageSize}
  </select>

  <select id="getCountByPage" resultType="java.lang.Integer">
    select  count(*)
    from ex_repository
    where is_deleted = 0
    <if test="params.repositoryName != null and params.repositoryName != ''">
        and repository_name like concat('%', #{params.repositoryName}, '%')
    </if>
    <if test="params.creatorName != null">
        and creator_name like concat(#{params.creatorName}, '%')
    </if>
    <if test="params.isEnabled != null">
        and is_enabled = #{params.isEnabled}
    </if>
    <if test="params.repositoryTime != null">
        and created_time between #{params.repositoryTime[0], jdbcType=TIMESTAMP} and #{params.repositoryTime[1], jdbcType=TIMESTAMP}
    </if>
   </select>

   <select id="checkIsChangeRepository" resultType="int">
    select count(*) from ex_repository_question where question_id = #{questionId} and repository_id = #{repositoryId}
   </select>

</mapper>
