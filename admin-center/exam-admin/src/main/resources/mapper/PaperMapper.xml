<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.fusheng.exam.mapper.PaperMapper">
  <resultMap id="BaseResultMap" type="xyz.fusheng.model.entity.Paper">
    <!--@mbg.generated-->
    <!--@Table ex_paper-->
    <id column="paper_id" jdbcType="BIGINT" property="paperId" />
    <result column="paper_name" jdbcType="VARCHAR" property="paperName" />
    <result column="rule_id" jdbcType="BIGINT" property="ruleId" />
    <result column="analysis" jdbcType="VARCHAR" property="analysis" />
    <result column="state" jdbcType="BOOLEAN" property="state" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="is_enabled" jdbcType="BOOLEAN" property="isEnabled" />
    <result column="is_deleted" jdbcType="BOOLEAN" property="isDeleted" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="updater_id" jdbcType="BIGINT" property="updaterId" />
    <result column="creator_name" jdbcType="VARCHAR" property="creatorName" />
    <result column="updater_name" jdbcType="VARCHAR" property="updaterName" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    paper_id, paper_name, rule_id, analysis, `state`, remark, memo, version, is_enabled,
    is_deleted, creator_id, updater_id, creator_name, updater_name, created_time, updated_time
  </sql>

  <select id="checkQuestionIsUsedByPaper" resultType="java.lang.Integer">
    select count(*)
    from ex_paper_question
    where question_id = #{questionId}
  </select>

  <select id="getByPage" resultType="xyz.fusheng.model.vo.PaperVo">
    select p.*, r.rule_name as ruleName
    from ex_paper p left join ex_rule r on p.rule_id = r.rule_id
    where p.is_deleted = 0
    <if test="params.paperName != null and params.paperName != ''">
        and p.paper_name like concat(#{params.paperName}, '%')
    </if>
   <if test="params.creatorName != null">
        and p.creator_name like concat(#{params.creatorName}, '%')
    </if>
    <if test="params.isEnabled != null">
        and p.is_enabled = #{params.isEnabled}
    </if>
    <if test="params.ruleId != null">
        and p.rule_id = #{params.ruleId}
    </if>
    <if test="params.paperTime != null">
        and p.created_time between #{params.paperTime[0], jdbcType=TIMESTAMP} and #{params.paperTime[1], jdbcType=TIMESTAMP}
    </if>
    <if test="sortColumn !=null and sortColumn != ''">
        order by ${sortColumn} ${sortMethod}
    </if>
    limit #{index}, #{pageSize}
  </select>

  <select id="getCountByPage" resultType="java.lang.Integer">
    select count(*)
    from ex_paper p left join ex_rule r on p.rule_id = r.rule_id
    where p.is_deleted = 0
    <if test="params.paperName != null and params.paperName != ''">
        and p.paper_name like concat(#{params.paperName}, '%')
    </if>
   <if test="params.creatorName != null">
        and p.creator_name like concat(#{params.creatorName}, '%')
    </if>
    <if test="params.isEnabled != null">
        and p.is_enabled = #{params.isEnabled}
    </if>
    <if test="params.ruleId != null">
        and p.rule_id = #{params.ruleId}
    </if>
    <if test="params.paperTime != null">
        and p.created_time between #{params.paperTime[0], jdbcType=TIMESTAMP} and #{params.paperTime[1], jdbcType=TIMESTAMP}
    </if>
  </select>

  <select id="getPaperBaseInfoById" resultType="xyz.fusheng.model.vo.PaperVo">
    select p.*, r.rule_name as ruleName
    from ex_paper p left join ex_rule r on p.rule_id = r.rule_id
    where p.is_deleted = 0 and p.paper_id = #{paperId}
  </select>

  <select id="getPaperVoListByExamId" resultType="xyz.fusheng.model.vo.PaperVo">
    select p.paper_id, p.paper_name, ep.priority_level as priorityLevel
    from ex_exam_paper ep left join ex_paper p on ep.paper_id = p.paper_id
    where ep.exam_id = #{examId} and p.is_deleted = 0
  </select>


</mapper>
